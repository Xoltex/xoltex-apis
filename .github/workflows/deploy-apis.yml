name: Crear API Gateway si no existe

on:
  push:
    branches:
      - main
    paths:
      - '*.yaml'

env:
  AWS_REGION: us-east-1
  ACCOUNT_ID: 234026641893  # ✅ Tu número de cuenta

jobs:
  crear-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar herramientas
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          curl -Lo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq

      - name: Extraer nombre de API desde YAML
        id: preparar
        run: |
          FILE=$(ls *.yaml | head -n 1)
          echo "📄 Usando archivo: $FILE"
          echo "api_file=$FILE" >> $GITHUB_OUTPUT

          NAME="$(yq '.info.title' "$FILE")"
          echo "📛 Nombre detectado: $NAME"
          echo "api_name=$NAME" >> $GITHUB_OUTPUT

      - name: Verificar si la API ya existe
        run: |
          NAME="${{ steps.preparar.outputs.api_name }}"
          EXISTING=$(aws apigateway get-rest-apis \
            --query "items[?name=='${NAME}'].id" \
            --output text \
            --region $AWS_REGION || true)

          if [ -n "$EXISTING" ]; then
            echo "❌ La API '$NAME' ya existe con ID: $EXISTING"
            exit 1
          else
            echo "✅ API '$NAME' no existe. Procediendo a crear."
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Crear nueva API y desplegar
        id: crear_api
        run: |
          FILE=${{ steps.preparar.outputs.api_file }}
          echo "🚀 Creando API desde $FILE"

          RESPONSE=$(aws apigateway import-rest-api \
            --body fileb://$FILE \
            --parameters endpointConfigurationTypes=REGIONAL \
            --region $AWS_REGION)

          echo "$RESPONSE" > response.json
          API_ID=$(jq -r '.id' response.json)
          echo "api_id=$API_ID" >> $GITHUB_OUTPUT

          echo "✅ API creada con ID: $API_ID"

          aws apigateway create-deployment \
            --rest-api-id "$API_ID" \
            --stage-name prod \
            --region $AWS_REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Otorgar permiso a Lambda
        run: |
          FILE=${{ steps.preparar.outputs.api_file }}
          API_ID=${{ steps.crear_api.outputs.api_id }}

          FUNC_ARN=$(yq '.paths.*.*."x-amazon-apigateway-integration".uri' "$FILE" | head -n 1)
          FUNC_NAME=$(echo "$FUNC_ARN" | cut -d':' -f 7 | cut -d'/' -f 1)
          METHOD=$(yq 'paths | select(.[1] == "x-amazon-apigateway-integration") | .[2]' "$FILE" | head -n 1 | tr -d '"')
          RESOURCE_PATH=$(yq 'paths | select(.[1] == "x-amazon-apigateway-integration") | .[0]' "$FILE" | head -n 1 | tr -d '"')

          echo "🧠 Lambda detectada: $FUNC_NAME"
          echo "🧠 Método detectado: $METHOD"
          echo "🧠 Path detectado: $RESOURCE_PATH"

          SOURCE_ARN="arn:aws:execute-api:$AWS_REGION:$ACCOUNT_ID:$API_ID/*/$METHOD$RESOURCE_PATH"
          echo "🔐 Asignando permiso con ARN: $SOURCE_ARN"

          EXISTING=$(aws lambda get-policy \
            --function-name "$FUNC_NAME" \
            --region "$AWS_REGION" \
            --query "Policy" \
            --output text 2>/dev/null || true)

          if echo "$EXISTING" | grep -q "$SOURCE_ARN"; then
            echo "✅ Permiso ya existe, se omite."
          else
            aws lambda add-permission \
              --function-name "$FUNC_NAME" \
              --statement-id "allow-apigw-${API_ID}-${METHOD}" \
              --action lambda:InvokeFunction \
              --principal apigateway.amazonaws.com \
              --source-arn "$SOURCE_ARN" \
              --region "$AWS_REGION"
            echo "✅ Permiso otorgado a Lambda '$FUNC_NAME'"
          fi
        env:
          AWS_REGION: us-east-1
          ACCOUNT_ID: 234026641893
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
